def gcd(a, b):
    # Recursive function for GCD
    if b == 0:
        return a
    else:
        return gcd(b, a % b)


def lcm(a, b):
    return abs(a * b) // gcd(a, b)


# Main Program
while True:
    x = int(input("Enter a value for x: "))
    y = int(input("Enter a value for y: "))

    if x > 0 and y > 0:
        break
    else:
        print("Values must be positive and non-zero. Try again.")

print(f"The LCM of {x} and {y} is = {lcm(x, y)}")

def tower_of_hanoi(n, source, target, auxiliary):
    if n == 1:
        print(f"Move disk 1 from {source} to {target}")
        return
    tower_of_hanoi(n - 1, source, auxiliary, target)
    print(f"Move disk {n} from {source} to {target}")
    tower_of_hanoi(n - 1, auxiliary, target, source)

# Main Program
n = int(input("Enter number of disks: "))
print(f"Steps to solve Tower of Hanoi with {n} disks:")
tower_of_hanoi(n, 'A', 'C', 'B')

